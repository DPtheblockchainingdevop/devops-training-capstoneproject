Description: >
  Author - DeVesco Pierre
  Project - Udacity DevOps Capstone Project
  Creates the network and EC2 instaces to Run a Jenkins server in the public domain. Also creates a Green/Blue Subnets

Parameters:
  ProjectName:
    Description: An project Name that will be prefixed to resoure names
    Type: String

  VpcCIDR:
    Description: VPC IP range in CIDR Notation
    Type: String
    Default: 10.0.0.0/24
  
  PublicSubnetGreenCIDR:
    Description: Green environment public IP range (CIDR notation)
    Type: String
    Default: 10.0.1.0/24

  PublicSubnetBlueCIDR:
    Description: Blue environment public IP Range (CIDR notation)
    Type: String
    Default: 10.0.2.0/24

  GreenSubnetCIDR:
    Description: Green environment IP range (CIDR notation) for a private subnet
    Type: String
    Default: 10.0.10.0/24

  BlueSubnetCIDR:
    Description: Blue environment IP range (CIDR notation) for the private subnet
    Type: String
    Default: 10.0.20.0/24

  InternetCIDR:
    Description: The CIRD notation for the internet
    Type: String
    Default: 0.0.0.0/0

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Kubernetes Network Configuration"
        Parameters:
          - ProjectName
          - VpcCIDR
          - PublicSubnetGreenCIDR
          - PublicSubnetBlueCIDR
          - GreenSubnetCIDR
          - BlueSubnetCIDR
    ParameterLabels:
      ProjectName:
        default: "Name of the Project which will be used for the Cluster name"
      VpcCIDR:
        default: "VPC IP range in CIDR Notation"


Resources:
  MainVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-VPC
        - Key: Project
          Value: !Ref ProjectName
  
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-InternetGateway
        - Key: Project
          Value: !Ref ProjectName
  
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MainVPC
      InternetGatewayId: !Ref InternetGateway

  GreenPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MainVPC
      CidrBlock: !Ref PublicSubnetGreenCIDR
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: kubernetes.io/role/elb
          Value: 1
        - Key: Environment
          Value: Green
        - Key: Name
          Value: !Sub ${ProjectName}-GreenPublicSubnet
  
  BluePublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MainVPC
      CidrBlock: !Ref PublicSubnetBlueCIDR
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: kubernetes.io/role/elb
          Value: 1
        - Key: Environment
          Value: Blue
        - Key: Name
          Value: !Sub ${ProjectName}-BluePublicSubnet
  
  GreenSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MainVPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref GreenSubnetCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-GreenSubnet
        - Key: Environment
          Value: Green
        - Key: kubernetes.io/role/internal-elb
          Value: 1

  BlueSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MainVPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref BlueSubnetCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-BlueSubnet
        - Key: Environment
          Value: Blue
        - Key: kubernetes.io/role/internal-elb
          Value: 1

  GreenNatGatewayEIP:
    Type: AWS::EC2::EIP 
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc 
      Tags:
        - Key: Name 
          Value: !Sub ${ProjectName}-GreenNatGatewayEIP
        - Key: Environment
          Value: Green  

  BlueNatGatewayEIP:
    Type: AWS::EC2::EIP 
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc 
      Tags:
        - Key: Name 
          Value: !Sub ${ProjectName}-BlueNatGatewayEIP  
        - Key: Environment
          Value: Blue

  GreenNatGateway:
    Type: AWS::EC2::NatGateway
    DependsOn:
      - GreenNatGatewayEIP
      - InternetGatewayAttachment
      - GreenPublicSubnet
    Properties:
      AllocationId: !GetAtt GreenNatGatewayEIP.AllocationId
      SubnetId: !Ref GreenSubnet
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-GreenNatGateway
        - Key: Environment
          Value: Green

  BlueNatGateway:
    Type: AWS::EC2::NatGateway 
    DependsOn:
      - BlueNatGatewayEIP
      - InternetGatewayAttachment
      - BluePublicSubnet
    Properties:
      AllocationId: !GetAtt BlueNatGatewayEIP.AllocationId
      SubnetId: !Ref BlueSubnet
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-BlueNatGateway
        - Key: Environment
          Value: Blue

  PublicRouteTable:
    Type: AWS::EC2::RouteTable 
    Properties:
      VpcId: !Ref MainVPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-PublicRoute
        - Key: Project
          Value: !Ref ProjectName

  GreenSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation 
    Properties:
      RouteTableId: !Ref GreenRouteTable
      SubnetId: !Ref GreenSubnet

  GreenPublicRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref GreenPublicSubnet

  BluePublicRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref BluePublicSubnet

  GreenRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MainVPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-GreenRoute
        - Key: Environment
          Value: Green
        - Key: Project
          Value: !Ref ProjectName

  BlueRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MainVPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-BlueRoute
        - Key: Environment
          Value: Blue
        - Key: Project
          Value: !Ref ProjectName

  BlueSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref BlueRouteTable
      SubnetId: !Ref BlueSubnet

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: !Ref InternetCIDR
      GatewayId: !Ref InternetGateway

  GreenRoute:
    Type: AWS::EC2::Route
    DependsOn: 
      - GreenNatGateway
      - InternetGatewayAttachment
    Properties: 
      RouteTableId: !Ref GreenRouteTable
      DestinationCidrBlock: !Ref InternetCIDR
      NatGatewayId: !Ref GreenNatGateway

  BlueRoute:
    Type: AWS::EC2::Route 
    DependsOn:
      - BlueNatGateway
      - InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref BlueRouteTable
      DestinationCidrBlock: !Ref InternetCIDR
      NatGatewayId: !Ref BlueNatGateway
          
  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Cluster communication with worker nodes
      VpcId: !Ref MainVPC

Outputs:
  VPC:
    Description: A reference to the created VPN
    Value: !Ref MainVPC
    Export:
      Name: !Sub ${ProjectName}-VPCID
  
  GreenSubnets:
    Description: Green environment list of subnets
    Value: !Join [ ",", [ !Ref GreenPublicSubnet, !Ref GreenSubnet ] ]
    Export:
      Name: !Sub ${ProjectName}-Green-Subnet
  
  BlueSubnets:
    Description: Blue environment list of subnets
    Value: !Join [ ",", [ !Ref BluePublicSubnet, !Ref BlueSubnet ] ] 
    Export:
      Name: !Sub ${ProjectName}-Blue-Subnet
  
  SecurityGroups:
    Description: Security group for the cluster control plane communication with worker nodes
    Value: !Join [ ",", [ !Ref ControlPlaneSecurityGroup ] ]